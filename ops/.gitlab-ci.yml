.job_template_build: &job_build
  type: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  when: on_success

.job_template_best_practices: &job_best_practices
  image: node:8-alpine
  type: best_practices
  before_script:
    - npm i --ignore-scripts
  only:
    - tags
  allow_failure: true

.job_template_deploy: &job_deploy
  type: deploy
  script:
    - export DEPLOYS=$(helm ls | grep $RELEASE_NAME | wc -l)
    - if [ ${DEPLOYS}  -eq 0 ]; then
        helm --kube-context $HELM_NAMESPACE install
          --name $RELEASE_NAME
          --namespace=$CI_PROJECT_NAMESPACE
          --set CI_PROJECT_NAME=$CI_PROJECT_NAME
          --set CI_PIPELINE_ID=$CI_PIPELINE_ID
          --set CI_BUILD_ID=$CI_BUILD_ID
          --set image.tag=$CI_COMMIT_TAG
          --set CI_COMMIT_SHA=$CI_COMMIT_SHA
          $HELM_PATH;
      else
        helm --kube-context $HELM_NAMESPACE upgrade $RELEASE_NAME $HELM_PATH
          --namespace=$CI_PROJECT_NAMESPACE
          --set CI_PROJECT_NAME=$CI_PROJECT_NAME
          --set CI_PIPELINE_ID=$CI_PIPELINE_ID
          --set CI_BUILD_ID=$CI_BUILD_ID
          --set image.tag=$CI_COMMIT_TAG
          --set CI_COMMIT_SHA=$CI_COMMIT_SHA;
      fi
  except:
    - branches
  when: manual

.job_template_publish: &job_publish
  type: publish
  except:
    - branches
  when: on_success

image: docker:latest
before_script:
  - apk add --no-cache git
services:
  - docker:dind

stages:
  - build
  - best_practices
  - publish
  - deploy

variables:
  RELEASE_NAME: react-app
  HELM_PATH: ops/Helm/react-app
  DOCKER_IMAGE_URL: cros/react-app

build:staging:
  <<: *job_build
  script:
    - docker build -t $CI_REGISTRY_IMAGE --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg REACT_APP_GOOGLE_RECAPTCHA_SITEKEY=$REACT_APP_GOOGLE_RECAPTCHA_SITEKEY .
    - docker push $CI_REGISTRY_IMAGE
    # - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg REACT_APP_GOOGLE_RECAPTCHA_SITEKEY=$REACT_APP_GOOGLE_RECAPTCHA_SITEKEY .
    # - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/

build:production:
  <<: *job_build
  script:
    - docker build -t $CI_REGISTRY_IMAGE --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg REACT_APP_GOOGLE_RECAPTCHA_SITEKEY=$REACT_APP_GOOGLE_RECAPTCHA_SITEKEY .
    - docker push $CI_REGISTRY_IMAGE

    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.?(?:0|[1-9]\d*)?$/

eslint:
  <<: *job_best_practices
  script:
    - npm run lint

unit-test:
  <<: *job_best_practices
  script:
    - npm test

flow typing:
  <<: *job_best_practices
  script:
    - npm run flow

registry:staging:
  <<: *job_publish
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker tag $CI_REGISTRY_IMAGE $DOCKER_IMAGE_URL
    - docker push $DOCKER_IMAGE_URL
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/

registry:production:
  <<: *job_publish
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS

    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $DOCKER_IMAGE_URL
    - docker push $DOCKER_IMAGE_URL

    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $DOCKER_IMAGE_URL:$CI_COMMIT_TAG
    - docker push $DOCKER_IMAGE_URL:$CI_COMMIT_TAG
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.?(?:0|[1-9]\d*)?$/

chart:
  <<: *job_publish
  script:
  # Install tool
    - apk add --update git openssl

  # install Helm
    - wget https://kubernetes-helm.storage.googleapis.com/helm-v2.7.2-linux-amd64.tar.gz
    - tar -xvf helm-v2.7.2-linux-amd64.tar.gz
    - mv linux-amd64/helm /usr/local/bin/helm
    - helm init -c

  # update charts
    - git clone https://$GITHUB_USER:$GITHUB_PASSWORD@github.com/micro-company/charts.git
    - helm package $HELM_PATH
    - mv *.tgz charts/docs
    - helm repo index charts/docs
    - cd charts
    - git add .
    - git config --global user.email "authmicroservice@gmail.com"
    - git config --global user.name "CI bot"
    - git commit -m "Add/Update chart $CI_PROJECT_NAME:$CI_COMMIT_TAG"
    - git push

deploy:staging:
  <<: *job_deploy
  variables:
    HELM_NAMESPACE: minikube
  only:
    - /^(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/
